swagger: "2.0"
info:
  version: "1.0.1"
  title: JOYDIP BOOKSTORE
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:


  /book:
  # /movie:
    # our controller name
    x-swagger-router-controller: book
    get:
      operationId: getAll
      description: get the books list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBooksListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
        operationId: save
        description: add a new book to the list
        # movie info to be stored
        parameters:
          - name: name
            description: Book properties
            # publisher: publisher
            in: body
            required: true
            schema:
              $ref: "#/definitions/Book"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/GeneralResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  
  /book/{id}:
  # /movie/{id}:
      # our controller name
      x-swagger-router-controller: book
      get:
        operationId: getOne
        description: get a book
        # define the type of response for Success "200" and Error
        parameters:
          - name: id
            type: string
            in: path
            required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/GetBookResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      # put:
      #   operationId: update
      #   description: update a movie
      #   # define the parameters
      #   parameters:
      #     - name: id
      #       description: Movie id
      #       type: string
      #       in: path
      #       required: true
      #     - name: name
      #       description: Movie properties
      #       in: body
      #       required: true
      #       schema:
      #         $ref: "#/definitions/Movie"
      #   responses:
      #     "200":
      #       description: Success
      #       schema:
      #         $ref: "#/definitions/GeneralResponse"
      #     default:
      #       description: Error
      #       schema:
      #         $ref: "#/definitions/ErrorResponse"
              
              
      put:
        operationId: update
        description: update a book

        # define the parameters
        parameters:
          - name: id
            description: book id
            type: string
            in: path
            required: true
          - name: name
            description: book properties
            in: body
            required: true
            schema:
              $ref: "#/definitions/Book"

        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/GeneralResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
              


      
      
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  # HelloWorldResponse:
  #   required:
  #     - message
  #   properties:
  #     message:
  #       type: string
  GetBookResponse:
    required:
      - id
      - name
      - author
      - publisher
    properties:
      id:
        type: string
      name:
        type: string
      author:
        type: string
      publisher:
        type: string
        
  Book:
    type: object
    properties:
      name:
        type: string
        description: task object name
      author:
        type: string
        description: task description
      publisher:
        type: string
        description: publisher
    required:
      - name
      - author
      - publisher
      
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  GetBooksListResponse:
    required:
      - books
    properties:
      # The array of movies
      books:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            author:
              type: string 
            publisher:
              type: string 
              
              
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
      
  
